//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Assets/Use.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace UseCodeGenerator.Core.Use.SyntaxAnalizer {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="UseParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IUseListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.startRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStartRule([NotNull] UseParser.StartRuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.startRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStartRule([NotNull] UseParser.StartRuleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.model"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModel([NotNull] UseParser.ModelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.model"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModel([NotNull] UseParser.ModelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.modelName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModelName([NotNull] UseParser.ModelNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.modelName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModelName([NotNull] UseParser.ModelNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.class"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClass([NotNull] UseParser.ClassContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.class"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClass([NotNull] UseParser.ClassContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.className"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassName([NotNull] UseParser.ClassNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.className"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassName([NotNull] UseParser.ClassNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.inheritance"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInheritance([NotNull] UseParser.InheritanceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.inheritance"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInheritance([NotNull] UseParser.InheritanceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttribute([NotNull] UseParser.AttributeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttribute([NotNull] UseParser.AttributeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperation([NotNull] UseParser.OperationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperation([NotNull] UseParser.OperationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter([NotNull] UseParser.ParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter([NotNull] UseParser.ParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.operationBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperationBody([NotNull] UseParser.OperationBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.operationBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperationBody([NotNull] UseParser.OperationBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] UseParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] UseParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.conditional"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditional([NotNull] UseParser.ConditionalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.conditional"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditional([NotNull] UseParser.ConditionalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.pre"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPre([NotNull] UseParser.PreContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.pre"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPre([NotNull] UseParser.PreContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.post"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPost([NotNull] UseParser.PostContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.post"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPost([NotNull] UseParser.PostContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.enumeration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumeration([NotNull] UseParser.EnumerationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.enumeration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumeration([NotNull] UseParser.EnumerationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.enumerationName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumerationName([NotNull] UseParser.EnumerationNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.enumerationName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumerationName([NotNull] UseParser.EnumerationNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.enumerationLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumerationLiteral([NotNull] UseParser.EnumerationLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.enumerationLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumerationLiteral([NotNull] UseParser.EnumerationLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] UseParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] UseParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.typeLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeLiteral([NotNull] UseParser.TypeLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.typeLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeLiteral([NotNull] UseParser.TypeLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.simpleType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleType([NotNull] UseParser.SimpleTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.simpleType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleType([NotNull] UseParser.SimpleTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.simpleTypeLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleTypeLiteral([NotNull] UseParser.SimpleTypeLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.simpleTypeLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleTypeLiteral([NotNull] UseParser.SimpleTypeLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.booleanLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanLiteral([NotNull] UseParser.BooleanLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.booleanLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanLiteral([NotNull] UseParser.BooleanLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.integerLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntegerLiteral([NotNull] UseParser.IntegerLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.integerLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntegerLiteral([NotNull] UseParser.IntegerLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.realLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRealLiteral([NotNull] UseParser.RealLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.realLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRealLiteral([NotNull] UseParser.RealLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.stringLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringLiteral([NotNull] UseParser.StringLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.stringLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringLiteral([NotNull] UseParser.StringLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.association"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssociation([NotNull] UseParser.AssociationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.association"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssociation([NotNull] UseParser.AssociationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.associationName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssociationName([NotNull] UseParser.AssociationNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.associationName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssociationName([NotNull] UseParser.AssociationNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.associationItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssociationItem([NotNull] UseParser.AssociationItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.associationItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssociationItem([NotNull] UseParser.AssociationItemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.roleName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoleName([NotNull] UseParser.RoleNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.roleName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoleName([NotNull] UseParser.RoleNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.multiplicity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicity([NotNull] UseParser.MultiplicityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.multiplicity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicity([NotNull] UseParser.MultiplicityContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="UseParser.multiplicityValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicityValue([NotNull] UseParser.MultiplicityValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="UseParser.multiplicityValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicityValue([NotNull] UseParser.MultiplicityValueContext context);
}
} // namespace UseCodeGenerator.Core.Use.SyntaxAnalizer
