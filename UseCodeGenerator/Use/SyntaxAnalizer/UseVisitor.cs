//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Assets/Use.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace UseCodeGenerator.Use.SyntaxAnalizer {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="UseParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IUseVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="UseParser.startRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStartRule([NotNull] UseParser.StartRuleContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="UseParser.model"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitModel([NotNull] UseParser.ModelContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="UseParser.modelName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitModelName([NotNull] UseParser.ModelNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="UseParser.class"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClass([NotNull] UseParser.ClassContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="UseParser.className"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassName([NotNull] UseParser.ClassNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="UseParser.inheritance"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInheritance([NotNull] UseParser.InheritanceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="UseParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttribute([NotNull] UseParser.AttributeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="UseParser.operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperation([NotNull] UseParser.OperationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="UseParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter([NotNull] UseParser.ParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="UseParser.operationBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperationBody([NotNull] UseParser.OperationBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="UseParser.enumeration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumeration([NotNull] UseParser.EnumerationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="UseParser.enumerationName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumerationName([NotNull] UseParser.EnumerationNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="UseParser.enumerationLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumerationLiteral([NotNull] UseParser.EnumerationLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="UseParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] UseParser.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="UseParser.typeLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeLiteral([NotNull] UseParser.TypeLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="UseParser.simpleType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleType([NotNull] UseParser.SimpleTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="UseParser.simpleTypeLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleTypeLiteral([NotNull] UseParser.SimpleTypeLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="UseParser.association"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssociation([NotNull] UseParser.AssociationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="UseParser.multiplicity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicity([NotNull] UseParser.MultiplicityContext context);
}
} // namespace UseCodeGenerator.Use.SyntaxAnalizer
